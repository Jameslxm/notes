package com.lixm.notes.work_managerimport android.app.Applicationimport android.net.Uriimport androidx.lifecycle.AndroidViewModelimport androidx.lifecycle.LiveDataimport androidx.work.Dataimport androidx.work.OneTimeWorkRequestBuilderimport androidx.work.WorkInfoimport androidx.work.WorkManagerclass BlurViewModel(application: Application) : AndroidViewModel(application){    internal var imageUri: Uri? = null    internal var outputUri: Uri? = null    private val workManager: WorkManager = WorkManager.getInstance(application)    internal val outputWorkInfoItems: LiveData<List<WorkInfo>>    init {        outputWorkInfoItems = workManager.getWorkInfosByTagLiveData(TAG_OUTPUT)    }    internal fun applyBlur(blurLevel:Int){        val blurRequest = OneTimeWorkRequestBuilder<BlurWorker>()            .setInputData(createInputDataForUri())            .build()        workManager.enqueue(blurRequest)    }    //    private fun createInputDataForUri(): Data {        val builder = Data.Builder()        imageUri?.let {            builder.putString(KEY_IMAGE_URI,imageUri.toString())        }        return builder.build()    }    private fun crateInputDatForUri(): Data{        val builder = Data.Builder()        imageUri?.let{            builder.putString(KEY_IMAGE_URI,imageUri.toString())        }        return builder.build()    }    internal fun setImageUri(uri:String?){        imageUri = uriOrNull(uri)    }    private fun uriOrNull(uriString: String?): Uri? {        return if(!uriString.isNullOrEmpty()){            Uri.parse(uriString)        }else{            null        }    }    internal fun setOutputUri(outputImageUri: String) {        outputUri = uriOrNull(outputImageUri)    }}