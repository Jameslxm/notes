package com.lixm.notes.work_managerimport android.content.Intentimport android.os.Bundleimport android.view.Viewimport androidx.appcompat.app.AppCompatActivityimport androidx.lifecycle.Observerimport androidx.lifecycle.ViewModelProvidersimport androidx.work.WorkInfoimport com.lixm.notes.Rimport kotlinx.android.synthetic.main.activity_blur.*class BlurActivity : AppCompatActivity(){    private lateinit var viewModel: BlurViewModel    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_blur)        viewModel = ViewModelProviders.of(this).get(BlurViewModel::class.java)        setOnclickListeners()        viewModel.outputWorkInfoItems.observe(this,workInfoObserver())    }    private fun workInfoObserver(): Observer<List<WorkInfo>> {        return Observer{listOfWorkInfo ->            if(listOfWorkInfo.isNullOrEmpty()){                return@Observer            }            val workInfo = listOfWorkInfo[0]            if(workInfo.state.isFinished){                showWorkFinished()                val outputImageUri = workInfo.outputData.getString(KEY_IMAGE_URI)                if(!outputImageUri.isNullOrEmpty()){                    viewModel.setOutputUri(outputImageUri as String)                    see_file_button.visibility = View.VISIBLE                }            }else{                showWokeInProgress()            }        }    }    private fun showWokeInProgress() {        progress_bar.visibility = View.VISIBLE        cancel_button.visibility = View.VISIBLE        go_button.visibility = View.GONE        see_file_button.visibility = View.GONE    }    private fun showWorkFinished() {        progress_bar.visibility = View.GONE        cancel_button.visibility = View.GONE        go_button.visibility = View.VISIBLE    }    private fun setOnclickListeners() {        go_button.setOnClickListener { viewModel.applyBlur(blurLevel) }        see_file_button.setOnClickListener {            viewModel.outputUri?.let { currentUri ->                val actionView = Intent(Intent.ACTION_VIEW,currentUri)                actionView.resolveActivity(packageManager)?.run {                    startActivity(actionView)                }            }        }    }    private val blurLevel: Int        get() =            when(radio_blur_group.checkedRadioButtonId){                R.id.radio_blur_lv_1 -> 1                R.id.radio_blur_lv_2 -> 2                R.id.radio_blur_lv_3 -> 3                else -> 1            }}