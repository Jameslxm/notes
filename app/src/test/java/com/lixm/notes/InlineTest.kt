package com.lixm.notesimport org.junit.Testclass InlineTest {    @Test    fun testInline1(){    }    fun hasZeros(ints: List<Int>): Boolean{        ints.forEach {            if(it == 0) return true        }        return false    }    inline fun f(crossinline body: () -> Unit){        val f = object : Runnable{            override fun run() = body()        }    }////    inline fun <reified T> ThreeNode.findParentOfType(): T?{//        var p = parent//        while (p != null && p !is T){//            p = p.parent//        }//        return p as T?//    }//    inline fun <reified T> membersOf() = T::class.members////    fun  main(s: Array<String>){//        println(membersOf<StringBuilder>().joinToString("\n"))//    }}